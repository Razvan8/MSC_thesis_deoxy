#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1.5e-3
lambda_gamma<-5e-3
lambda_delta<-1e-3
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1.4e-3
lambda_gamma<-4e-3
lambda_delta<-1e-4
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1.4e-3
lambda_gamma<-6e-3
lambda_delta<-1e-4
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1.4e-3
lambda_gamma<-5e-3
lambda_delta<-1e-4
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-3,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda<-3e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
intercept_lasso
res_lasso<-irlasso.cb(X=X, Y=y, lambda=lambda, w.lambda=NULL, beta0=NULL,
centering=FALSE, scaling=FALSE, intercept=T,
maxit=10, tol=0.0545, sd.tol=1e-6,
verbose=TRUE)
res_lasso$beta
lambda<-1e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
intercept_lasso
lambda<-2e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
intercept_lasso
lambda<-3e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
intercept_lasso
lambda<-2.5e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso-0.5,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda<-2e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
intercept_lasso
lambda<-1e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
lambda_beta<-1.5e-3
lambda_gamma<-5e-3
lambda_delta<-1e-3
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-5e-3
lambda_delta<-1e-3
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-5e-3
lambda_delta<-1e-4
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-4e-3
lambda_delta<-1e-5
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
#shim with lasso init
lambda_beta<-1e-3
lambda_gamma<-4e-3
lambda_delta<-1e-10
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-4e-3
lambda_delta<-0
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-4e-3
lambda_delta<-0
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-4e-3
lambda_delta<-1e-3
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
data<- create_basic_dataset_bern_nothier()
libs_path<-file.path("..","libs")
source(file.path(libs_path,'Shim3way_GLM.R'))
source(file.path(libs_path,'hierarchy_tests.R'))
source(file.path(libs_path,'recover_parameters.R'))
source(file.path(libs_path,'Create_synthetic_datasets.R'))
data<- create_basic_dataset_bern_nothier()
X<- data$X
y<- data$y$obs
y<-array(y, dim=(c(length(y),1)) )
hist(y)
beta_true<- data$beta[-1,]
l1=8
l2=8
l3=4
#print(beta_true)
range_main<-c(1: (l1+l2+l3) )
range_theta<-c( (l1+l2+l3+1) : (l1+l2+l3+l1*(l2+l3)+l2*l3) )
range_psi<-c(  (l1+l2+l3+ 1+ l1*(l2+l3)+l2*l3): (l1+l2+l3+ l1*(l2+l3)+l2*l3+l1*l2*l3) )
beta_main<-beta_true[1:(l1+l2+l3)]
beta_2way<-beta_true[unlist(get_ranges(l1,l2,l3)[2])]
beta_3way<-beta_true[unlist(get_ranges(l1,l2,l3)[3])]
beta_2way_matrix<-get_theta_from_theta_vec_2way3(beta_2way,l1=l1,l2=l2, l3=l3)
beta_3way_table<-get_psi_from_psi_vec3(beta_3way,l1=l1,l2=l2, l3=l3)
beta_main_recovered<- get_all_beta(beta_main, l1=l1, l2=l2, l3=l3, threshold = 1e-4)
beta_2way_recovered<-  get_theta_vec_2way3(  get_all_theta(beta_2way_matrix, l1=l1, l2=l2, l3=l3, threshold = 1e-4), l1=l1+1, l2=l2+1, l3=l3+1)
beta_3way_recovered<- get_psi_vec3( get_all_psi(beta_3way_table, l1=l1, l2=l2, l3=l3, threshold = 1e-4) , l1=l1+1, l2=l2+1, l3=l3+1)
beta_2way_without_gamma<-get_beta_vec_2way(beta = beta_main, l1=l1, l2=l2, l3=l3, gamma=NULL, only_beta = TRUE )
beta_3way_without_gamma<-get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta = NULL, only_beta = TRUE)
gamma_true<-beta_2way/beta_2way_without_gamma
gamma_true[is.nan(gamma_true)]<-0
delta_true<-beta_3way/beta_3way_without_gamma
delta_true[is.nan(delta_true)]<-0
lambda<-1e-4
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
lambda<-1e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
lambda<-5e-3
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
lambda<-1e-4
results_lasso<-results_pipeline_lasso_GLM(X=X, y=y, lambda=lambda, l1=l1, l2=l2, l3=l3, beta_main, beta_2way, beta_3way, beta_main_recovered, beta_2way_recovered,
beta_3way_recovered, threshold = 0, strong = TRUE, use_intercept=TRUE)
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
beta_main_lasso<- results_lasso$main
beta_2way_lasso<-results_lasso$'2way'
beta_3way_lasso<-results_lasso$'3way'
intercept_lasso<-results_lasso$intercept
intercept_lasso
lambda_beta<-1e-3
lambda_gamma<-4e-3
lambda_delta<-1e-3
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-1e-3
lambda_delta<-1e-3
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-3
lambda_gamma<-1e-5
lambda_delta<-1e-5
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
lambda_beta<-1e-4
lambda_gamma<-1e-5
lambda_delta<-1e-5
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
#shim with lasso init
lambda_beta<-1e-3
lambda_gamma<-1e-5
lambda_delta<-1e-5
#beta_main_lasso ==beta_hat
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_lasso, beta_2way_init = beta_2way_lasso, beta_3way_init = beta_3way_lasso,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_lasso,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
abline(0,1)
results_pls<-results_pipeline_pls_GLM(X=cbind(1,X), y=y, n_comp=6, l1=l1, l2=l2, l3=l3,
beta_main, beta_2way, beta_3way, beta_main_recovered,
beta_2way_recovered, beta_3way_recovered, threshold = 0, strong = TRUE)
intercept_pls<-results_pls$intercept
beta_main_pls<- results_pls$main
beta_2way_pls<-results_pls$'2way'
beta_3way_pls<-results_pls$'3way'
results_pls$intercept
source(file.path(libs_path,'tools.R'))
rez<-plsglm.cb(X=X, Y=y, ncomp=6, beta0=NULL,
centering=FALSE, scaling=FALSE, intercept=TRUE,
maxit=10, tol=0.0545,
verbose=FALSE, clip=0.01)
coefs_all_pls<-rez$BETA[, ,6]
coefs_pls<-coefs_all_pls[-1]
intercept_pls<-coefs_all_pls[1]
beta_main_pls<-coefs_pls[range_main]
beta_2way_pls<-coefs_pls[range_theta]
beta_3way_pls<-coefs_pls[range_psi]
all_beta_functions(beta_main, beta_main_pls)
all_beta_functions(beta_2way, beta_2way_pls)
all_beta_functions(beta_3way, beta_3way_pls)
results_pipeline_shim_GLM(X=X, y=y, beta_main_init = beta_main_pls, beta_2way_init = beta_2way_pls, beta_3way_init = beta_3way_pls,
lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, l1=l1, l2=l2, l3=l3,
beta_main = beta_main, beta_2way = beta_2way, beta_3way = beta_3way , beta_main_recovered = beta_main_recovered,
beta_2way_recovered = beta_2way_recovered, beta_3way_recovered = beta_3way_recovered, tol=1e-2,intercept=intercept_pls,
use_intercept=TRUE, bind_C=FALSE, threshold=0)
abline(0,1)
libs_path<-file.path("..","libs")
source(file.path(libs_path,'helper_functions.R'))
source(file.path(libs_path,'Shim3way_GLM.R'))
source(file.path(libs_path,'hierarchy_tests.R'))
source(file.path(libs_path,'recover_parameters.R'))
library(glmnet)
data<-load_deoxi_flourination()
print(max(data$yield))
hist(data$prob)
which(data$yield_corrected==100)
which(data$yield>100)
plot_yield_histo(data)
levels(data$a)
levels(data$b)
levels(data$s)
y_true<-data$prob*100
X_data<-data[c('a','b','s')]
X_data <- lapply(X_data, as.factor)
X_data <- as.data.frame(X_data)  # Convert back to data frame
# Create the dummy matrix without intercept
X_dummy <- model.matrix(~ . - 1, data = X_data, contrasts.arg = lapply(X_data, contrasts, contrasts = FALSE))
# Find rows where the 37th column has value 1
rows_to_replace1 <- X_dummy[,37] == 1
# Replace values in columns 1 to 36 with -1 for these rows
X_dummy[rows_to_replace1, 1:36] <- -1
rows_to_replace2 <- X_dummy[,41] == 1
X_dummy[rows_to_replace2, 38:40] <- -1
rows_to_replace3 <- X_dummy[,46] == 1
X_dummy[rows_to_replace3, 42:45] <- -1
print(dim(X_dummy))
print(colSums(X_dummy))
##only once
X_dummy<-X_dummy[,-c(37,41,46)]
print(dim(X_dummy))
print(colSums(X_dummy))
###
new_colnames <- c(paste0("a.", 1:36), paste0("b.", 1:3), paste0("s.", 1:4))
colnames(X_dummy) <- new_colnames
X_dummy<-as.data.frame(X_dummy, col.names =TRUE)
for (i in 1:36) {
for (jk in 37:43) {
X_dummy[, paste0(colnames(X_dummy)[i], ':', colnames(X_dummy)[jk])] <-X_dummy[,i]*X_dummy[,jk]
}
}
for (j in c(37:39))
{for (k in c(40:43))
{
X_dummy[,paste0((colnames(X_dummy)[j]),':', colnames(X_dummy[k]) ) ] <- X_dummy[,j]*X_dummy[,k]
}
}
for (i in c(1:36))
{for (j in c(37:39))
{for (k in c(40:43))
{
X_dummy[,paste0( (colnames(X_dummy)[i]), ':' , colnames(X_dummy[j]), ":",  colnames(X_dummy[k]) ) ] <- X_dummy[,i]*X_dummy[,j]*X_dummy[,k]
}
}}
X<-as.matrix(X_dummy)
y<-y_true
################################################################ USE LASSO AND MY CLASS ON DATA #################################
l1=36
l2=3
l3=4
#print(beta_true)
range_main<-c(1: (l1+l2+l3) )
range_theta<-c( (l1+l2+l3+1) : (l1+l2+l3+l1*(l2+l3)+l2*l3) )
range_psi<-c(  (l1+l2+l3+ 1+ l1*(l2+l3)+l2*l3): (l1+l2+l3+ l1*(l2+l3)+l2*l3+l1*l2*l3) )
y_centered<-y-mean(y)
y<-y/100 ############# only once
class(y_centered)
####START LASSO
lambda=0.001
res_lasso<-irlasso.cb(X=X, Y=y, lambda=lambda, w.lambda=NULL, beta0=NULL,
centering=FALSE, scaling=FALSE, intercept=T,
maxit=10, tol=0.0545, sd.tol=1e-6,
verbose=TRUE)
cross_validation_irlasso.cb( X=X, y=y, lambda_values=c( 1e-2, 5e-2,1e-3, 5e-3, 1e-4, 5e-4, 1e-5), l1=l1,l2=l2,l3=l3, split_percentage = 0.6)
cross_validation_irlasso.cb( X=X, y=y, lambda_values=c(  5e-2,1e-3, 5e-3, 1e-4, 5e-4, 1e-5), l1=l1,l2=l2,l3=l3, split_percentage = 0.6)
cross_validation_irlasso.cb( X=X, y=y, lambda_values=c( 1e-3, 5e-3, 1e-4, 5e-4, 1e-5), l1=l1,l2=l2,l3=l3, split_percentage = 0.6)
lambda=5e-4
res_lasso<-irlasso.cb(X=X, Y=y, lambda=lambda, w.lambda=NULL, beta0=NULL,
centering=FALSE, scaling=FALSE, intercept=T,
maxit=10, tol=0.0545, sd.tol=1e-6,
verbose=TRUE)
coefs_lasso<-array(res_lasso$beta[-1,1,1])
interc_init<-res_lasso$beta[1,1,1]
beta_main_lasso<-coefs_lasso[range_main]
beta_2way_lasso<-coefs_lasso[range_theta]
beta_3way_lasso<-coefs_lasso[range_psi]
beta_2way_lasso_without_gamma<-get_beta_vec_2way(beta_main_lasso,l1=l1,l2=l2,l3=l3,only_beta = TRUE)
beta_hat<-beta_main_lasso
gamma_hat<- beta_2way_lasso/beta_2way_lasso_without_gamma
gamma_hat[is.nan(gamma_hat)]<-0
gamma_hat[!is.finite(gamma_hat)]<-0 #this is 0 in shim case
beta_3way_lasso_without_delta<- get_beta_vec_3way(beta_2way_lasso_without_gamma*gamma_hat, l1=l1, l2=l2, l3=l3, only_beta = TRUE) #maybe better for shim init
delta_hat<- beta_3way_lasso/beta_3way_lasso_without_delta
delta_hat[!is.finite(delta_hat)]<-0
delta_hat[is.nan(delta_hat)]<-0
predict_lasso<-kappa1(X%*%array(coefs_lasso, dim=c(length(coefs_lasso),1) )  + interc_init  ) #no intercept
print(r2(y, predict_lasso))
sum(beta_2way_lasso==0)/length(beta_2way_lasso)
sum(beta_main_lasso==0)/length(beta_main_lasso)
sum(beta_2way_lasso==0)/length(beta_2way_lasso)
sum(beta_main_lasso==0)/length(beta_main_lasso)
sum(beta_2way_lasso==0)/length(beta_2way_lasso)
sum(beta_3way_lasso==0)/length(beta_3way_lasso)
plot(predict_lasso, y)
lambda_beta<-1e-4
lambda_gamma<-1e-4
lambda_delta<-1e-4
fitted<-my_shim$fit(X=X, y=y, lambda_beta = lambda_beta,
lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, w_beta = 1, w_gamma = 1, w_delta = 1, tol=1e-3)
my_shim<-SHIM_3way(X=X, y=y, beta_init = beta_hat, gamma_init = gamma_hat, delta_init = delta_hat, l1=l1, l2=l2, l3=l3, scale = FALSE)
fitted<-my_shim$fit(X=X, y=y, lambda_beta = lambda_beta,
lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, w_beta = 1, w_gamma = 1, w_delta = 1, tol=1e-3)
coefs_lasso<-array(res_lasso$beta[-1,1,1])
interc_init<-res_lasso$beta[1,1,1]
beta_main_lasso<-coefs_lasso[range_main]
beta_2way_lasso<-coefs_lasso[range_theta]
beta_3way_lasso<-coefs_lasso[range_psi]
beta_2way_lasso_without_gamma<-get_beta_vec_2way(beta_main_lasso,l1=l1,l2=l2,l3=l3,only_beta = TRUE)
beta_hat<-beta_main_lasso
gamma_hat<- beta_2way_lasso/beta_2way_lasso_without_gamma
gamma_hat[is.nan(gamma_hat)]<-0
gamma_hat[!is.finite(gamma_hat)]<-0 #this is 0 in shim case
beta_3way_lasso_without_delta<- get_beta_vec_3way(beta_2way_lasso_without_gamma*gamma_hat, l1=l1, l2=l2, l3=l3, only_beta = TRUE) #maybe better for shim init
delta_hat<- beta_3way_lasso/beta_3way_lasso_without_delta
delta_hat[!is.finite(delta_hat)]<-0
delta_hat[is.nan(delta_hat)]<-0
predict_lasso<-kappa1(X%*%array(coefs_lasso, dim=c(length(coefs_lasso),1) )  + interc_init  ) #no intercept
print(r2(y, predict_lasso))
plot(predict_lasso, y)
sum(beta_main_lasso==0)/length(beta_main_lasso)
sum(beta_2way_lasso==0)/length(beta_2way_lasso)
sum(beta_3way_lasso==0)/length(beta_3way_lasso)
my_shim<-SHIM_3way(X=X, y=y, beta_init = beta_hat, gamma_init = gamma_hat, delta_init = delta_hat, l1=l1, l2=l2, l3=l3, scale = FALSE)
fitted<-my_shim$fit(X=X, y=y, lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, w_beta = 1,
w_gamma = 1, w_delta = 1, tol=5e-3, compute_Q = Q_bern, intercept = interc_init, use_intercept = TRUE)
#fitted
my_shim$R2_score(self=fitted, X_new=X, y_true=y )
fitted
range_main
sum(fitted$beta_all[range_main]==0)
sum(fitted$beta_all[range_main]==0)/length(range_main)
sum(fitted$beta_all[range_theta]==0)/length(range_theta)
sum(fitted$beta_all[range_psi]==0)/length(range_psi)
rez<-plsglm.cb(X=X, Y=y, ncomp=8, beta0=NULL,
centering=FALSE, scaling=FALSE, intercept=TRUE,
maxit=10, tol=0.0545,
verbose=FALSE, clip=0.01)
libs_path<-file.path("..","libs")
source(file.path(libs_path,'helper_functions.R'))
source(file.path(libs_path,'Shim3way_GLM.R'))
source(file.path(libs_path,'hierarchy_tests.R'))
source(file.path(libs_path,'recover_parameters.R'))
rez<-plsglm.cb(X=X, Y=y, ncomp=8, beta0=NULL,
centering=FALSE, scaling=FALSE, intercept=TRUE,
maxit=10, tol=0.0545,
verbose=FALSE, clip=0.01)
abline(0,1)
source(file.path(libs_path,'tools.R'))
rez<-plsglm.cb(X=X, Y=y, ncomp=8, beta0=NULL,
centering=FALSE, scaling=FALSE, intercept=TRUE,
maxit=10, tol=0.0545,
verbose=FALSE, clip=0.01)
coefs_all_pls<-rez$BETA[, ,8]
coefs_all_pls<-rez$BETA[, ,8]
coefs_pls<-coefs_all_pls[-1]
intercept_pls<-coefs_all_pls[1]
beta_main_pls<-coefs_pls[range_main]
beta_2way_pls<-coefs_pls[range_theta]
beta_3way_pls<-coefs_pls[range_psi]
beta_hat<-beta_main_pls
beta_2way_without_gamma_init<-get_beta_vec_2way(beta_hat,l1=l1,l2=l2,l3=l3,only_beta = TRUE)
gamma_hat<- beta_2way_pls/beta_2way_without_gamma_init
gamma_hat[is.nan(gamma_hat)]<-0
gamma_hat[!is.finite(gamma_hat)]<-0 #this is 0 in shim case
#beta_3way_without_delta_init<-get_beta_vec_3way(beta_2way = beta_2way_init, l1=l1, l2=l2, l3=l3, only_beta = TRUE)
beta_3way_without_delta_init<- get_beta_vec_3way(beta_2way_without_gamma_init*gamma_hat, l1=l1, l2=l2, l3=l3, only_beta = TRUE) #maybe better for shim init
delta_hat<- beta_3way_pls/beta_3way_without_delta_init
delta_hat[!is.finite(delta_hat)]<-0
delta_hat[is.nan(delta_hat)]<-0
coefs_all_pls
my_shim<-SHIM_3way(X=X, y=y, beta_init = beta_hat, gamma_init = gamma_hat, delta_init = delta_hat, l1=l1, l2=l2, l3=l3, scale = FALSE)
fitted<-my_shim$fit(X=X, y=y, lambda_beta = lambda_beta, lambda_gamma = lambda_gamma, lambda_delta = lambda_delta, w_beta = 1,
w_gamma = 1, w_delta = 1, tol=5e-3, compute_Q = Q_bern, intercept = interc_init, use_intercept = TRUE)
#fitted
my_shim$R2_score(self=fitted, X_new=X, y_true=y )
abline(0,1)
sum(fitted$beta_all[range_main]==0)/length(range_main)
sum(fitted$beta_all[range_theta]==0)/length(range_theta)
sum(fitted$beta_all[range_psi]==0)/length(range_psi)
