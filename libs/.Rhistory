get_positions_3way<-function(ls_positions, l1, l2, l3)
{all_positions<-c()
for (tuple in ls_positions)
{pos<-table_position_to_vector_index3(position_tuple = tuple, l1=l1, l2=l2, l3=l3)
#print(pos)
all_positions<-c(all_positions, pos)}
return(all_positions)}
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
update_gamma<-function(X, y,beta_hat, gamma_hat, delta_hat, lambda_gamma, l1, l2, l3, w=1)
{range1<- c(1:l1)
range2<-c((l1+1):(l1+l2))
range3<-c( (l1+l2+1) : (l1+l2+l3) )
X_2way<-X[,c( (l1+l2+l3+1): (l1+l2+l3+l1*l2+l2*l3+l1*l3) )]
X_3way<-X[,c( (l1+l2+l3+l1*l2+l2*l3+l1*l3+1):(l1+l2+l3+l1*l2+l2*l3+l1*l3+l1*l2*l3) )]
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
if (w==1)
{w=array(1, dim=length(gamma_hat))}
for(i in range1){
for (j in range2){
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
discard_2way<-matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
for (elem3 in range3) {
tuple <- c(i, j, elem3)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
#print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
#print(X_2way_kept)
#print(beta_2way_kept)
#print(X_3way_kept)
#print(beta_3way_kept)
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
#print(y_tilde)
three_ways=0
print("ok")
for (k in range3) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
print("ok1")
X_tilde<-X_2way[,discard_2way]*beta_hat[i]*beta_hat[j]+  three_ways
print("ok2")
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3)]<-lasso_1d_closed_form(X=X_tilde, y= y_tilde,
lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3) ] )
print("lasso used")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
print(gamma_hat)
print('ababababbabababaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb')
for(i in range1){
for (k in range3){
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
discard_2way<-matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
for (elem3 in range2) {
tuple <- c(i, elem3, k)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
#print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
three_ways=0
for (j in range2) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
X_tilde<-X_2way[,discard_2way]*beta_hat[i]*beta_hat[k]+ three_ways
lasso_1d_closed_form(X=X_tilde, y= y_tilde, lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)] )
#print(lambda_gamma)
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)]<-lasso_1d_closed_form(X=X_tilde, y= y_tilde, lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3) ] )
print("lasso used 2")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
print(gamma_hat)
print("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
for(j in range2){
for (k in range3){
discard_2way<-matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
for (elem3 in range1) {
tuple <- c(elem3, j, k)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
three_ways=0
for (i in range1) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
X_tilde<-X_2way[,discard_2way]*beta_hat[j]*beta_hat[k]+ three_ways
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)]<- lasso_1d_closed_form(X=X_tilde, y= y_tilde,
lambda= lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2, l3=l3) ] )
print("Lasso used 3")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
return(gamma_hat)
}
data<- create_basic_dataset()
X<- data$X
y<- data$y$obs
beta_true<- data$beta[-1,]
l1=9
l2=9
l3=4
print(beta_true)
beta_main<-beta_true[1:(l1+l2+l3)]
beta_2way<-beta_true[unlist(get_ranges(l1,l2,l3)[2])]
beta_3way<-beta_true[unlist(get_ranges(l1,l2,l3)[3])]
beta_2way_without_gamma<-get_beta_vec_2way(beta = beta_main, l1=l1, l2=l2, l3=l3, gamma=NULL, only_beta = TRUE )
gamma_hat<-beta_2way/beta_2way_without_gamma
gamma_hat[is.nan(gamma_hat)]<-0
lambda_gamma<-1
beta_3way_without_gamma<-get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta = NULL, only_beta = TRUE)
gamma_true<-beta_2way/beta_2way_without_gamma
gamma_true[is.nan(gamma_true)]<-0
delta_true<-beta_3way/beta_3way_without_gamma
delta_true[is.nan(delta_true)]<-0
gamma_hat<-gamma_true*0.99
gamma_hat[2]<-3
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
update_gamma<-function(X, y,beta_hat, gamma_hat, delta_hat, lambda_gamma, l1, l2, l3, w=1)
{range1<- c(1:l1)
range2<-c((l1+1):(l1+l2))
range3<-c( (l1+l2+1) : (l1+l2+l3) )
X_2way<-X[,c( (l1+l2+l3+1): (l1+l2+l3+l1*l2+l2*l3+l1*l3) )]
X_3way<-X[,c( (l1+l2+l3+l1*l2+l2*l3+l1*l3+1):(l1+l2+l3+l1*l2+l2*l3+l1*l3+l1*l2*l3) )]
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
if (w==1)
{w=array(1, dim=length(gamma_hat))}
for(i in range1){
for (j in range2){
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
discard_2way<-matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3)
print("disc")
print(discard_2way)
ls_tuples_discard_3way<-list()
for (elem3 in range3) {
tuple <- c(i, j, elem3)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
#print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
#print(X_2way_kept)
#print(beta_2way_kept)
#print(X_3way_kept)
#print(beta_3way_kept)
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
#print(y_tilde)
three_ways=0
print("ok")
for (k in range3) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
print("ok1")
X_tilde<-X_2way[,discard_2way]*beta_hat[i]*beta_hat[j]+  three_ways
print("ok2")
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3)]<-lasso_1d_closed_form(X=X_tilde, y= y_tilde,
lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3) ] )
return (gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3)])
print("lasso used")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
print(gamma_hat)
print('ababababbabababaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb')
for(i in range1){
for (k in range3){
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
discard_2way<-matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
for (elem3 in range2) {
tuple <- c(i, elem3, k)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
#print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
three_ways=0
for (j in range2) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
X_tilde<-X_2way[,discard_2way]*beta_hat[i]*beta_hat[k]+ three_ways
lasso_1d_closed_form(X=X_tilde, y= y_tilde, lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)] )
#print(lambda_gamma)
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)]<-lasso_1d_closed_form(X=X_tilde, y= y_tilde, lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3) ] )
print("lasso used 2")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
print(gamma_hat)
print("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
for(j in range2){
for (k in range3){
discard_2way<-matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
for (elem3 in range1) {
tuple <- c(elem3, j, k)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
three_ways=0
for (i in range1) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
X_tilde<-X_2way[,discard_2way]*beta_hat[j]*beta_hat[k]+ three_ways
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)]<- lasso_1d_closed_form(X=X_tilde, y= y_tilde,
lambda= lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2, l3=l3) ] )
print("Lasso used 3")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
return(gamma_hat)
}
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_hat<-gamma_true*0.9999
gamma_hat[1]<-3
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_hat<-gamma_true*0.9999
gamma_hat[1]<-30
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
update_gamma<-function(X, y,beta_hat, gamma_hat, delta_hat, lambda_gamma, l1, l2, l3, w=1)
{range1<- c(1:l1)
range2<-c((l1+1):(l1+l2))
range3<-c( (l1+l2+1) : (l1+l2+l3) )
X_2way<-X[,c( (l1+l2+l3+1): (l1+l2+l3+l1*l2+l2*l3+l1*l3) )]
X_3way<-X[,c( (l1+l2+l3+l1*l2+l2*l3+l1*l3+1):(l1+l2+l3+l1*l2+l2*l3+l1*l3+l1*l2*l3) )]
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
if (w==1)
{w=array(1, dim=length(gamma_hat))}
for(i in range1){
for (j in range2){
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
discard_2way<-matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
for (elem3 in range3) {
tuple <- c(i, j, elem3)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
#print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
#print(X_2way_kept)
#print(beta_2way_kept)
#print(X_3way_kept)
#print(beta_3way_kept)
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
#print(y_tilde)
three_ways=0
print("ok")
for (k in range3) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
print("ok1")
X_tilde<-X_2way[,discard_2way]*beta_hat[i]*beta_hat[j]+  three_ways
print("ok2")
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3)]<-lasso_1d_closed_form(X=X_tilde, y= y_tilde,
lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2, l3=l3) ] )
print("lasso used")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
print(gamma_hat)
print('ababababbabababaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb')
for(i in range1){
for (k in range3){
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
discard_2way<-matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
for (elem3 in range2) {
tuple <- c(i, elem3, k)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
#print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
three_ways=0
for (j in range2) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
X_tilde<-X_2way[,discard_2way]*beta_hat[i]*beta_hat[k]+ three_ways
lasso_1d_closed_form(X=X_tilde, y= y_tilde, lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)] )
#print(lambda_gamma)
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)]<-lasso_1d_closed_form(X=X_tilde, y= y_tilde, lambda=lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3) ] )
print("lasso used 2")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
print(gamma_hat)
print("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
for(j in range2){
for (k in range3){
discard_2way<-matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2, l3=l3)
ls_tuples_discard_3way<-list()
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
for (elem3 in range1) {
tuple <- c(elem3, j, k)
ls_tuples_discard_3way <- append(ls_tuples_discard_3way, list(tuple))
}
#print("ls tuples: ")
#print(ls_tuples_discard_3way)
discard_3way<- get_positions_3way(ls_tuples_discard_3way, l1=l1, l2=l2, l3=l3) #positions 3 way in vector form
print("ls positions 3 way: ")
#print(discard_3way)
X_2way_kept<-X_2way[,-discard_2way]
X_3way_kept<-X_3way[, -discard_3way]
beta_2way_kept <- beta_2way[-discard_2way]
beta_3way_kept <- beta_3way[-discard_3way]
gamma_hat_kept <- gamma_hat[-discard_2way]
delta_hat_kept <- delta_hat[-discard_3way]
y_tilde<-y - mains_contribution(X=X, beta_main=beta_hat, l1=l1, l2=l2, l3=l3) - X_2way_kept%*%beta_2way_kept -X_3way_kept%*%beta_3way_kept
three_ways=0
for (i in range1) #compute 3 ways contrib
{three_ways<-three_ways+ X_3way[,table_position_to_vector_index3(c(i,j,k),l1=l1, l2=l2, l3=l3)]*((beta_hat[i]*beta_hat[j]*beta_hat[k])^2)*
gamma_hat[matrix_position_to_vector_index_2way(c(i,j), l1=l1, l2=l2 ,l3=l3)] *
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2 ,l3=l3)] *
delta_hat[table_position_to_vector_index3(c(i,j,k), l1=l1, l2=l2, l3=l3)]
}
X_tilde<-X_2way[,discard_2way]*beta_hat[j]*beta_hat[k]+ three_ways
gamma_hat[matrix_position_to_vector_index_2way(c(i,k), l1=l1, l2=l2, l3=l3)]<- lasso_1d_closed_form(X=X_tilde, y= y_tilde,
lambda= lambda_gamma, w=w[matrix_position_to_vector_index_2way(c(j,k), l1=l1, l2=l2, l3=l3) ] )
print("Lasso used 3")
beta_2way <- get_beta_vec_2way(beta = beta_hat, l1=l1, l2=l2, l3=l3, gamma=gamma_hat, only_beta = FALSE) ###This is with delta
beta_3way <- get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta=delta_hat, only_beta = FALSE) #This is with gamma WITH delta
}
}
return(gamma_hat)
}
data<- create_basic_dataset()
X<- data$X
y<- data$y$obs
beta_true<- data$beta[-1,]
l1=9
l2=9
l3=4
print(beta_true)
beta_main<-beta_true[1:(l1+l2+l3)]
beta_2way<-beta_true[unlist(get_ranges(l1,l2,l3)[2])]
beta_3way<-beta_true[unlist(get_ranges(l1,l2,l3)[3])]
beta_2way_without_gamma<-get_beta_vec_2way(beta = beta_main, l1=l1, l2=l2, l3=l3, gamma=NULL, only_beta = TRUE )
gamma_hat<-beta_2way/beta_2way_without_gamma
gamma_hat[is.nan(gamma_hat)]<-0
lambda_gamma<-1
beta_3way_without_gamma<-get_beta_vec_3way(beta_2way = beta_2way, l1=l1, l2=l2, l3=l3, delta = NULL, only_beta = TRUE)
gamma_true<-beta_2way/beta_2way_without_gamma
gamma_true[is.nan(gamma_true)]<-0
delta_true<-beta_3way/beta_3way_without_gamma
delta_true[is.nan(delta_true)]<-0
gamma_hat<-gamma_true*0.9999
gamma_hat[1]<-30
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_hat<-gamma_true*0.9999
gamma_hat[1]<-30
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_true
gamma_hat<-gamma_true*0.9999
gamma_hat[2]<-30
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_hat<-gamma_true+rnorm(length(gamma_hat), 0,0.1)
gamma_hat[1]<-30
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma*2, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_true
gamma_hat<-gamma_true+rnorm(length(gamma_hat), 0,0.05)
gamma_hat[1]<-30
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma*2, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_hat<-gamma_true+rnorm(length(gamma_hat), 0,0.001)
gamma_hat[1]<-30
gamma_hat
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma*2, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_pred <- update_gamma(X=X, y=y,beta_hat=beta_main, gamma_hat=gamma_hat, delta_hat=delta_hat, lambda_gamma=lambda_gamma*10, l1=l1, l2=l2, l3=l3, w=1)
gamma_pred
gamma_true
